{"version":3,"sources":["scripts/sort.js","scripts/createForm.js","scripts/pushNotification.js","scripts/formHandler.js","scripts/main.js"],"names":["tableSort","type","tableItems","sortedTable","sort","a","b","children","innerText","localeCompare","slice","split","join","module","exports","formCreator","newForm","document","createElement","classList","add","innerHTML","pushNotification","posTop","posRight","title","description","message","style","right","top","transition","body","appendChild","setTimeout","opacity","remove","require","positionNotification","errorTitle","errorMessage","successTitle","successMessage","formHandlerFunc","form","tbody","nameInput","querySelector","positionInput","officeInput","ageInput","salaryInput","value","length","newRowForForm","firstElementChild","cssText","tableHead","tableBody","sortCounter","addEventListener","submitEve","preventDefault","dblClkEve","rowItemDBL","target","closest","newInput","keyEve","key","dispatchEvent","Event","isTrusted","e","rowItem","headCell","tableRows","querySelectorAll","tableBodyToSort","sorted","reverse","item"],"mappings":"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","file":"main.892fdc72.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nfunction tableSort(type, tableItems) {\n  let sortedTable;\n\n  switch (type) {\n    case 'Name':\n      sortedTable = [...tableItems]\n        .sort((a, b) => (\n          a.children[0].innerText.localeCompare(b.children[0].innerText)\n        ));\n      break;\n\n    case 'Position':\n      sortedTable = [...tableItems]\n        .sort((a, b) => (\n          a.children[1].innerText.localeCompare(b.children[1].innerText)\n        ));\n      break;\n\n    case 'Office':\n      sortedTable = [...tableItems]\n        .sort((a, b) => (\n          a.children[2].innerText.localeCompare(b.children[2].innerText)\n        ));\n      break;\n\n    case 'Age':\n      sortedTable = [...tableItems]\n        .sort((a, b) => (a.children[3].innerText - b.children[3].innerText));\n      break;\n\n    case 'Salary':\n      sortedTable = [...tableItems]\n        .sort((a, b) => (\n          a.children[4].innerText.slice(1).split(',').join('')\n          - b.children[4].innerText.slice(1).split(',').join('')\n        ));\n      break;\n\n    default:\n      sortedTable = [...tableItems];\n      break;\n  }\n\n  return sortedTable;\n}\nmodule.exports = { tableSort };\n","'use strict';\n\nfunction formCreator() {\n  const newForm = document.createElement('form');\n\n  newForm.classList.add('new-employee-form');\n\n  newForm.innerHTML = `\n    <label>Name:\n        <input\n            id=\"name-input\"\n            name=\"name\"\n            type=\"text\"\n            data-qa=\"name\"\n        >\n    </label>\n\n    <label>Position:\n        <input\n            id=\"position-input\"\n            name=\"position\"\n            type=\"text\"\n            data-qa=\"position\"\n        >\n    </label>\n\n    <label>Office:\n        <select name=\"office\" id=\"office-input\">\n            <option value=\"tokyo\">Tokyo</option>\n            <option value=\"singapore\">Singapore</option>\n            <option value=\"london\">London</option>\n            <option value=\"edinburgh\">Edinburgh</option>\n            <option value=\"new-york\">New York</option>\n            <option value=\"san-francisco\">San Francisco</option>\n        </select>\n    </label>\n\n    <label>Age:\n        <input\n            id=\"age-input\"\n            name=\"age\"\n            type=\"number\"\n            data-qa=\"age\"\n        >\n    </label>\n\n    <label>Salary:\n        <input id=\"salary-input\" name=\"salary\" type=\"number\" data-qa=\"salary\">\n    </label>\n\n    <button type=\"submit\" name=\"submit\">Save to table</button>\n  `;\n\n  return newForm;\n}\n\nmodule.exports = { formCreator };\n","'use strict';\n\nconst pushNotification = (posTop, posRight, title, description, type) => {\n  const message = document.createElement('div');\n\n  message.classList.add('notification');\n  message.classList.add(type);\n  message.style.right = `${posRight}px`;\n  message.style.top = `${posTop}px`;\n  message.style.transition = `opacity 0.5s`;\n\n  message.innerHTML = `\n      <h2 class=\"title\">${title}</h2>\n      <p>${description}</p>\n    `;\n\n  document.body.appendChild(message);\n\n  setTimeout(() => {\n    message.style.opacity = '0';\n  }, 2000);\n\n  setTimeout(() => {\n    message.remove();\n  }, 2500);\n};\n\nmodule.exports = { pushNotification };\n","'use strict';\n\nconst { pushNotification } = require('./pushNotification.js');\n\nlet positionNotification = 10;\nconst errorTitle = `Title of Error message`;\nconst errorMessage = `Notification should contain title and description.`;\nconst successTitle = `Title of Success message`;\nconst successMessage = `Notification should contain title and description.`;\n\nfunction formHandlerFunc(form, tbody) {\n  const nameInput = form.querySelector('#name-input');\n  const positionInput = form.querySelector('#position-input');\n  const officeInput = form.querySelector('#office-input');\n  const ageInput = form.querySelector('#age-input');\n  const salaryInput = form.querySelector('#salary-input');\n\n  if (nameInput.value.length < 4\n    || ageInput.value < 18\n    || ageInput.value > 90\n  ) {\n    pushNotification(positionNotification, 10, errorTitle,\n      errorMessage, 'error');\n\n    positionNotification += 120;\n\n    setTimeout(() => {\n      positionNotification = 10;\n    }, 2000);\n\n    return;\n  }\n\n  const newRowForForm = document.createElement('tr');\n\n  newRowForForm.innerHTML = `\n    <td>${nameInput.value}</td>\n    <td>${positionInput.value}</td>\n    <td>${officeInput.value}</td>\n    <td>${ageInput.value}</td>\n    <td>${salaryInput.value}</td>\n  `;\n\n  tbody.appendChild(newRowForForm);\n\n  nameInput.value = '';\n  positionInput.value = '';\n  officeInput.value = '';\n  ageInput.value = '';\n  salaryInput.value = '';\n\n  pushNotification(positionNotification, 10, successTitle,\n    successMessage, 'success');\n}\n\nmodule.exports = { formHandlerFunc };\n","'use strict';\n\n// import\nconst { tableSort } = require('./sort.js');\nconst { formCreator } = require('./createForm.js');\nconst { formHandlerFunc } = require('./formHandler.js');\n\n// to align table and form\ndocument.body.firstElementChild.style.cssText = 'align-self: flex-start;';\n\n// Vars\nconst tableHead = document.querySelector('thead > tr');\nconst tableBody = document.querySelector('tbody');\nconst form = formCreator();\nlet sortCounter = false;\n\n// Add created form\ndocument.body.appendChild(form);\n\n// Form submit listener:\nform.addEventListener('submit', (submitEve) => {\n  submitEve.preventDefault();\n  formHandlerFunc(form, tableBody);\n});\n\n// Double click on cell listener:\ntableBody.addEventListener('dblclick', (dblClkEve) => {\n  const rowItemDBL = dblClkEve.target.closest('td');\n  const newInput = document.createElement('input');\n\n  newInput.classList.add('cell-input');\n  newInput.value = rowItemDBL.innerText;\n  rowItemDBL.innerHTML = '';\n\n  rowItemDBL.appendChild(newInput);\n\n  // Enter listener:\n  newInput.addEventListener('keypress', (keyEve) => {\n    if (keyEve.key === 'Enter') {\n      newInput.dispatchEvent((new Event('blur', { isTrusted: true })));\n    }\n  });\n\n  // Blur listener:\n  newInput.addEventListener('blur', () => {\n    rowItemDBL.innerText = newInput.value;\n    newInput.value = '';\n    newInput.remove();\n  });\n});\n\n// Active row on the table listener:\ntableBody.addEventListener('click', (e) => {\n  const rowItem = e.target.closest('tr');\n\n  for (const rowItemElement of tableBody.children) {\n    rowItemElement.classList.remove('active');\n  }\n\n  rowItem.classList.add('active');\n});\n\n// Sort the table listener:\ntableHead.addEventListener('click', (e) => {\n  const headCell = e.target.closest('th');\n  const tableRows = document.querySelectorAll('tbody > tr');\n  const tableBodyToSort = document.querySelector('tbody');\n  const sorted = tableSort(headCell.innerText, tableRows);\n\n  if (sortCounter) {\n    sorted.reverse();\n  }\n\n  tableBodyToSort.innerHTML = '';\n\n  for (const item of sorted) {\n    tableBodyToSort.appendChild(item);\n  }\n\n  if (!sortCounter) {\n    sortCounter = true;\n  } else {\n    sortCounter = false;\n  }\n});\n"]}